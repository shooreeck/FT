name: Preset generator

on: 
  workflow_dispatch:
    inputs:
      frame_size:
        description: "Оберіть для якого дрона (F7..F11)"
        type: choice
        options: 
        - F7
        - F10
        required: true
        default: "f7"
      flight_controller:
        description: "Оберіть для якого польотного контролера ..."
        type: choice
        options: 
        - rush
        - diatone
        - geprc
        required: true
        default: "rush"
      vtx_type:
        description: "Оберіть частоту відео передавача (1.3 .. 5.8)"
        type: choice
        options: 
        - "5.8"
        - "1.3"
        - "4.9"
        required: true
        default: "5.8"
      is_thermal:
        description: "Камера тепловізійна?"
        type: boolean
        default: false
      vtx_name:
        description: "Оберіть відео передавач ..."
        type: choice
        options: 
        - ft
        - max_solo
        - max_solo_x
        - geprc
        - rush
        - maten
        required: true
        default: "max_solo"
      custom_osd:
        description: "Тестова ОСД ..."
        type: boolean
        default: false
    
jobs:
  merge-texts:
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Termal or not
        uses: haya14busa/action-cond@v1
        id: termal
        with:
          cond: ${{ inputs.is_thermal }}
          if_true: '${{inputs.frame_size}}T'
          if_false: '${{inputs.frame_size}}'

      - name: Get current date
        id: date
        run: echo "date=$(date +'%d_%m_%Y')" >> $GITHUB_STATE
      
      - name: Generate file name
        id: filename
        run: |
          FILE_NAME="${{ steps.termal.outputs.value }}_${{inputs.flight_controller}}_${{inputs.vtx_type}}_${{inputs.vtx_name}}_${{ steps.date.outputs.date }}.txt"
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_OUTPUT
          
        
      - name: Upload header to the file
        run: |
          HEADER=$(cat header.txt)
          echo "$HEADER" >> ${{ steps.filename.outputs.FILE_NAME }}

      - name: Upload FC related setup
        run: | 
          FC_BLOCK=$(cat FC/${{inputs.flight_controller}}.txt)
          echo "$FC_BLOCK" >> ${{ steps.filename.outputs.FILE_NAME }}

      - name: Custom OSD or default
        uses: haya14busa/action-cond@v1
        id: custom_osd
        with:
          cond: ${{ inputs.custom_osd }}
          if_true: 'custom_osd' 
          if_false: 'default_osd' 

      - name: Upload Master table to the file
        run: |
          MASTER_TABLE=$(cat PIDs/${{inputs.frame_size}}.txt)
          echo "$MASTER_TABLE" >> ${{ steps.filename.outputs.FILE_NAME }}

      - name: Set craft name
        run: |
          echo "set craft_name = ${{ steps.termal.outputs.value }}" >> ${{ steps.filename.outputs.FILE_NAME }}

      - name: Upload OSD table to the file    
        run: |
          OSD=$(cat OSD/${{ steps.custom_osd.outputs.value }}.txt)
          echo "$OSD" >> ${{ steps.filename.outputs.FILE_NAME }}

      - name: Upload VTX block to the file
        run: |
          VTX_BLOCK=$(cat vtx_tables/${{inputs.vtx_type}}/vtx_block.txt)
          echo "$VTX_BLOCK" >> ${{ steps.filename.outputs.FILE_NAME }}
      
      - name: Upload VTX table to the file
        run: |
          VTX_TABLE=$(cat vtx_tables/${{inputs.vtx_type}}/${{inputs.vtx_name}}.txt)
          echo "$VTX_TABLE" >> ${{ steps.filename.outputs.FILE_NAME }}
   
      - name: Upload footer to the file
        run: |
          FOOTER=$(cat footer.txt)
          echo "$FOOTER" >> ${{ steps.filename.outputs.FILE_NAME }}
          
      - name: Post the results
        uses: actions/upload-artifact@v4
        with:
          name: archive-result
          path: ${{ steps.filename.outputs.FILE_NAME }}
